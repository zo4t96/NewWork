@model IEnumerable<MainWork.tProduct>
@using MainWork.Models;

@{
    if (Request.IsAjaxRequest() == false)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = null;
    }
    if (TempData["message"] != null)
    {
        <script type="text/javascript">
        var message = @Html.Raw(Json.Encode(TempData["message"]));
        alert(message);
        </script>
    }
    var AlbInfo = ViewBag.AlbInfo;
    var account = "";
    if (Session[CDictionary.SK_ACCOUNT] == null || string.IsNullOrWhiteSpace(Session[CDictionary.SK_ACCOUNT].ToString()))
    {
        Response.Redirect("~/Index/");
    }
    else
    {
        account = Session[CDictionary.SK_ACCOUNT].ToString();
    }
    int amid = (int)Session["albumid"];
    tAlbum tAl = (new dbProjectMusicStoreEntities()).tAlbums.FirstOrDefault(p => p.fAlbumID == amid);
    tProduct tP = new tProduct();
}

<style>
    /*額外補上的*/
    .originalPanel,
    .demoPanel {
    position: relative;
    width: 100%; /*此行修改過*/
    height: 50px;
    /*background: #5c616e;*/ /*此行拿掉過*/
    margin: 10px;
    padding: 10px;
    }
    .demoPanel:hover { /*此class新增*/
        background-color: darkgray;
    }
            .demoSlider,
        .originalSlider,
        .vbtn {
            cursor: pointer;
        }
        .vbtn {
            display: inline;
        }
            .vbtn img {
                width: 20px;
                height: 15px;
                filter: invert();
            }
    /*額外補上的*/

    .demoSlider,
    .originalSlider {
        -webkit-appearance: none;
        display: inline-block;
        border-radius: 50px;
        width: 70%;
        height: 5px;
        outline: none;
        margin: 10px;
    }

        .slider-range::-webkit-slider-thumb,
        .demoSlider::-webkit-slider-thumb,
        .originalSlider::-webkit-slider-thumb {
            -webkit-appearance: none;
            position: relative;
            width: 10px;
            height: 10px;
            background: rgb(201, 201, 201);
            border-radius: 50%;
            transition: 0.2s;
        }

            .demoSlider::-webkit-slider-thumb:hover,
            .originalSlider::-webkit-slider-thumb:hover {
                cursor: pointer;
                width: 14px;
                height: 14px;
            }

    .slider {
        margin: 20px;
        width: 500px;
    }

    /*albuminfo開始*/
    /*專輯圖/介紹開始*/
    .albumset {
        width: 30%;
        display: inline-block;
        margin-left: 5%;
        margin-top: 3%;
        text-align:center;
        /*background-color: saddlebrown;*/
    }
    /*專輯圖/介紹*/
    /*單曲列表開始*/
    .albumtext {
        text-align: center;
        width: 97%;
    }
    /*單曲列表結束*/
    /*albuminfo結束*/
    /*MyAlbumList開始*/
    /*摺疊樣式開始*/
    .musicsPanel {
        width: 30%;
        display: inline-block;
        vertical-align: top;
        min-width: 700px;
        margin: 50px 80px;
        /*background-color: #257042*/
    }

    /*摺疊效果預設摺起來*/
    .fold-title {
        background-color: #f3f3f3;
        padding: 10px;
        color: #525252;
        margin-bottom: 0;
        width: 100%;
        border-top-left-radius: 10px;
    }

    .foldAlbum {
        display: none;
        line-height: 17pt;
        width: 100%
    }

    .fold-container {
        padding: 10px 10px 10px 30px;
        border: solid #f3f3f3 2px;
    }

    /*摺疊樣式結束*/
    /*MyAlbumList結束*/
    /*當滑鼠滑到該元素上，底下的兩個子元素會有變化的寫法*/
    .fa:hover, .fas:hover {
        color: #525252;
    }

    .fa, .fas {
        transition: 0.4s;
        cursor: pointer;
    }

    /*額外新增03/07/2020*/
    .albumCover{
        width:360px;
        height:360px;
        margin:0 auto;
    }
    .albumCover > img{
        width:100%;
        height:100%;
        display: inline-block;
        background-size:cover;
    }
    .form-group{
        display:inline-block;
        width:70%;
    }
    .form-group > .h5{
        font-weight:600;
    }
    .form-group > .kind{
        display: inline-block;
    }
    .formBox{
        text-align:center;
    }
    .file{
        display:inline-block;
        width:200px;
    }
</style>
@*抓取抓音樂檔檔案名稱歌手js檔*@
<script src="@Url.Content("~/Scripts/musicmetadata.js")" type="text/javascript"></script>

<div class="albumset">
    <div class="albumCover"><img id="fCoverPathUploadimg" src="~/CoverFiles/@tAl.fCoverPath" /></div>
    <div class="formBox">
        <form name="form1" id="form1" enctype="multipart/form-data" class="mt-4">

            @{ if (tAl.fStatus == 0)
                {
                    <div class="form-group mb-4">
                        <span class="h5">更換封面：　</span>
                        <input class="file" type="file" name="fCoverPathUpload" id="fCoverPathUpload" />
                    </div>
                }
            }

            @{ if (tAl.fStatus == 0)
                {
                    <div class="form-group">
                        <div class="h5">專輯名稱</div>
                        <div class="col-md-12">
                            <input name="revisefAlbumName" class="form-control albumtextbox" type="text" value="@tAl.fAlbumName" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <div class="h5">@tAl.fAlbumName</div>
                    </div>
                }
            }


            <div class="form-group">
                <div class="h5">發行團體</div>
                <div class="col-md-12">
                    @{ if (tAl.fStatus == 0)
                        {
                            <input name="revisefMaker" class="form-control albumtextbox" type="text" value="@tAl.fMaker" />
                        }
                        else
                        {
                            <div class="h5">@tAl.fMaker</div>
                        }
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="h5">販售分類</div>
                <div class="col-md-8 kind">
                    @{ if (tAl.fStatus == 0)
                        {
                            <select class="form-control ustom-select my-1 mr-sm-1" name="revisefType" id="talTypeload"></select>
                        }
                        else
                        {
                            <div class="h5">@tAl.tAlbumType.fTypeName</div>
                        }
                    }
                </div>
            </div>
            @* 網頁初始化時會在這裡載入的類別以talTypeload抓取 *@
            <div class="form-group">
                <div class="h5">音樂曲風</div>
                <div class="col-md-12">
                    @{ if (tAl.fStatus == 0)
                        {
                            <div id="kindReviseInterface" class="form-control btn btn-outline-secondary">修改</div>
                        }
                        else
                        {
                            <div class="h5">@((tAl.fKinds).Replace(",","、"))</div>
                        }
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="h5">專輯售價</div>
                <div class="col-md-12 albumtextbox">
                    @{ if (tAl.fStatus == 0)
                        {
                            <input name="revisefALPrice" class="form-control " type="text" value="@((int)tAl.fALPrice)" />
                        }
                        else
                        {
                            <div class="h5">$@((int)tAl.fALPrice)</div>
                        }
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="h5">狀態</div>
                <div class="col-md-12">
                    @{ if (tAl.fStatus == 0)
                        {
                            @:<input class="ml-4" type="radio" name="o.fstatus" id="o_status_yes" value="1" />
                            <label for="o_status_yes">送審 </label>
                            @:<input class="ml-5" type="radio" name="o.fstatus" id="o_status_no" checked value="0" />
                            <label for="o_status_no">繼續修改</label>
                        }
                        else if (tAl.fStatus == 1)
                        {
                            @:<span>專輯送審中...</span>
                        }
                        else if (tAl.fStatus == 2)
                        {
                            @:<span>正常販售</span>
                        }
                    }
                </div>
            </div>

        </form>
        <h5 class="albumtext">共有 @(Model.Count()) 首 </h5>
        @{ if (tAl.fStatus == 0)
            {
                    <button class="btn btn-info editAlbumInfo mr-3 mt-2">修改專輯內容</button>
            }
            else if (tAl.fStatus == 1)
            {
                    <button class="btn btn-info editAlbumInfoClose mr-3 mt-2">撤回重新修改內容</button>
            }
            else if (tAl.fStatus == 2)
            {
                    <button class="btn btn-info editAlbumInfoClose mr-3 mt-2">下架</button>
            }
        }
            @Html.ActionLink("刪除專輯", "DeleteAlbum", new { amid = Session["albumid"].ToString() }, new { @class = "btn btn-danger mr-3 mt-2", onclick = "return confirm('確定要刪除嗎?')" })

            <div class="mt-3 mb-5 small">最後修改日期 @(((DateTime)(tAl.fYear)).ToShortDateString())</div>
    </div>
</div>

<div class="musicsPanel">
    <div class="container">
        @if (tAl.fStatus == 0)
        {
            <div class="h3fold h3 fold-title" data-start="input" data-end="input"><i class="fa fa-chevron-right"></i> 單曲上傳</div>
            <div class="foldAlbum">
                <div class="fold-container">
                    <div class="container" style="color:white">
                        @using (Html.BeginForm("AlbumInfo", "Album", FormMethod.Post, new { enctype = "multipart/form-data", id = "formInput" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <div class="h4">請輸入單曲基本資料</div>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => tP.fFilePath, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-12">
                                    <div class="container playerPanel">
                                        <input type="file" id="upload" name="tP_fRealFile" accept=".mp3" />
                                        <hr>
                                        <div class="h4 font-weight-bold">原始檔案</div>
                                        <small>請確認上傳檔案是否有誤</small>
                                        <div class="py-2 originalPanel">
                                            <audio class="originalAudio"></audio>
                                            <span class="nowTime">00:00</span>
                                            <input type="range" class="originalSlider" min="0" max="100" step="0.01" value="0">
                                            <span class="totalSetTime">00:00</span>
                                            <div class="vbtn oplay" data-><img src="~/Content/play.png"></div>
                                            <div class="vbtn opause"><img src="~/Content/pause.png"></div>
                                        </div>
                                        @*這邊input留下為了使調整的值藉由轉換至text的Name:tP_fPlayStart and tP_fPlayEnd傳至DB*@
                                        @*<button type="button" class="btn btn-primary setStart">設定開頭時間</button>*@
                                        <input type="hidden" id="fPlays" name="tP.fPlays" class="start" value="00:00.00" disabled>
                                        <br>
                                        @*<button type="button" class="btn btn-primary setEnd">設定結束時間</button>*@
                                        <input type="hidden" id="fPlaye" name="tP.fPlaye" class="end" value="00:00.00" disabled>
                                        <input class="form-control text-box single-line" id="tP_fPlayStart" name="tP.fPlayStart" type="hidden" value="0">
                                        <input class="form-control text-box single-line" id="tP_fPlayEnd" name="tP.fPlayEnd" type="hidden" value="30">
                                        <p>※拉動滑條來選取可供人免費試聽的範圍(若不選取，預設試聽範圍0~30秒)</p>
                                        <div id="slider-range" class="slider"></div>
                                        <div  class="h4 font-weight-bold">試聽檔案</div>
                                        <small>在此確認擷取的試聽範圍</small>
                                        <div class="py-2 demoPanel">
                                            <audio class="demoSetAudio"></audio>
                                            <span class="nowDemo">00:00</span>
                                            <input type="range" class="demoSlider" min="0" max="100" step="0.01" value="0">
                                            <span class="totalDemo">00:00</span>
                                            <div class="vbtn dplay"><img src="~/Content/play.png"></div>
                                            <div class="vbtn dpause"><img src="~/Content/pause.png"></div>
                                        </div>
                                        <hr>
                                    </div>
                                </div>
                                @*增加placeholder提醒會自動更新*@
                                <div class="form-group">
                                    @Html.LabelFor(model => tP.fProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => tP.fProductName, new { htmlAttributes = new { @class = "form-control", placeholder = "上傳檔案後會根據單曲內標籤自動填入" } })
                                        @Html.ValidationMessageFor(model => tP.fProductName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*增加placeholder提醒會自動更新*@
                                <div class="form-group">
                                    @Html.LabelFor(model => tP.fSinger, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => tP.fSinger, new { htmlAttributes = new { @class = "form-control", placeholder = "上傳檔案後會根據單曲內標籤自動填入" } })
                                        @Html.ValidationMessageFor(model => tP.fSinger, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => tP.fComposer, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => tP.fComposer, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => tP.fComposer, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => tP.fSIPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => tP.fSIPrice, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => tP.fSIPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="button" value="Create" id="inputFormSubmit" class="btn btn-warning" />
                                    </div>
                                </div>
                            </div>
                        }
                        @*for end*@
                    </div>
                </div>
            </div>
        }
        @foreach (var item in Model)
        {

            <div class="h3fold h3 fold-title"
                 data-soid="@item.fProductID"
                 data-start="@Html.DisplayFor(modelItem => item.fPlayStart)"
                 data-end="@Html.DisplayFor(modelItem => item.fPlayEnd)"
                 data-playurl="@(Url.Content("~/MusicFiles/") + Html.DisplayFor(modelItem => item.fFilePath))"
                 data-revfproductname="@item.fProductName"
                 data-revfsinger="@item.fSinger"
                 data-revfcomposer="@item.fComposer"
                 data-revfsiprice="@item.fSIPrice">
                @Html.DisplayFor(modelItem => item.fProductName)
            </div>
            <div class="foldAlbum">
                <div class="fold-container">
                    <div class="container">
                        <div class="container playerPanel">
                            <div class="form-group">
                                @Html.LabelFor(modelItem => item.fProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control text-box single-line revise_fProductName" type="text" value="">
                                    @Html.ValidationMessageFor(modelItem => item.fProductName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => item.fSinger, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control text-box single-line revise_fSinger" type="text" value="">
                                    @Html.ValidationMessageFor(modelItem => item.fSinger, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => item.fComposer, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control text-box single-line revise_fComposer" type="text" value="">
                                    @Html.ValidationMessageFor(modelItem => item.fComposer, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => item.fSIPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control text-box single-line revise_fSIPrice" type="text" value="">
                                    @Html.ValidationMessageFor(modelItem => item.fSIPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*<input type="file" id="upload" accept=".mp3" />*@
                            </div>
                            <hr>
                            <div class="h4 font-weight-bold">原始檔案</div>
                            <small>請確認上傳檔案是否有誤</small>
                            <div class="py-2 originalPanel">
                                <audio class="originalAudio"></audio>
                                <span class="nowTime">00:00</span>
                                <input type="range" class="originalSlider" min="0" max="100" step="0.01" value="0">
                                <span class="totalSetTime">00:00</span>
                                <div class="vbtn oplay" data-><img src="~/Content/play.png"></div>
                                <div class="vbtn opause"><img src="~/Content/pause.png"></div>
                            </div>

                            <p>※拉動滑條來選取可供人免費試聽的範圍(若不選取，預設試聽範圍0~30秒)</p>
                            <div id="slider-range" class="slider"></div>

                            <div class="h4 font-weight-bold">試聽檔案</div>
                            <small>在此確認擷取的試聽範圍</small>
                            <div class="py-2 demoPanel">
                                <audio class="demoSetAudio"></audio>
                                <span class="nowDemo">00:00</span>
                                <input type="range" class="demoSlider" min="0" max="100" step="0.01" value="0">
                                <span class="totalDemo">00:00</span>
                                <div class="vbtn dplay"><img src="~/Content/play.png"></div>
                                <div class="vbtn dpause"><img src="~/Content/pause.png"></div>
                            </div>
                            <hr>
                        </div>

                        @if (tAl.fStatus == 0)
                        {
                            <div class="mb-3">
                                <button data-songid="@item.fProductID" class="btn btn-danger deletesong">刪除此首單曲</button>
                                <button class="btn btn-info updatetime">更新此首單曲資料</button>
                                <button class="btn btn-info updateSongInfo">重新上傳音樂檔</button>
                            </div>
                        }
                    </div>
                </div>
            </div>

        }
    </div>
</div>
<div class="eventNotification" hidden>
</div>

<script>

    $.getJSON('@Url.Action("SetTypes","Search")', function (datas) {
        $.each(datas, function (name, value) {
            if (value.fTypeID == @tAl.fType) {
                $("#talTypeload").append(`<option value="${value.fTypeID}" selected>${value.fTypeName}</option>`)
            } else {
               $("#talTypeload").append(`<option value="${value.fTypeID}">${value.fTypeName}</option>`)
            }
        })
        //上下架call
        //let o_status = @tAl.fStatus;
        //if (o_status == 1) {
        //    $("#o_status_yes").prop("checked", true);
        //} else {
        //    $("#o_status_no").prop("checked", true);
        //}
    })

    //圖片選擇按下時時重新載入
    $("#fCoverPathUpload").change(function(){
    readURL(this);
    });
    //類別選擇載入
    function readURL(input){

    if(input.files && input.files[0]){
    var reader = new FileReader();
    reader.onload = function (e) {
        $("#fCoverPathUploadimg").attr('src', e.target.result);
            }
        reader.readAsDataURL(input.files[0]);
        }
    };

    $("#kindReviseInterface").on("click", function () {
        $.get("@Url.Action("_kindReviseInterface","Album")", function (data) {
            $("#modalContent").html(data);
        });
        $("#modal").css("display", "block");
        setTimeout(function () {
            $("#modal").addClass("fadein");
            $("#modalContent").addClass("fadein");
        }, 10)
    })

    $("#fPlaye").change(function () {
        console.log($("#fPlaye").val());
        $("#tP_fPlayEnd").val($("#fPlaye").val())
        console.log($("#tP_fPlayEnd").val());
    })

    $("#fPlays").change(function () {
        $("#tP_fPlayStart").val($("#fPlays").val())
    })

    $("#inputFormSubmit").click(function () {
        if (music.error == null) {
            if ($("#tP_fProductName").val() != "") {
                if ($("#tP_fSinger").val() != "") {
                    if ($("#tP_fSIPrice").val() > 0 && $("#tP_fSIPrice").val() % 1 ==0) {


                        var formData = new FormData($("#formInput")[0]);

                        $.ajax({
                            url: `./AlbumInfoUpload/`,
                            type: "POST",
                            data: formData,
                            cache: false,
                            dataType: 'script',
                            processData: false,
                            contentType: false,
                            success: function (data) {
                            $(".eventNotification").html(data);
                            let plink = "@Url.Action("AlbumInfo","Album",new {amid = Session["albumid"].ToString()})";
                            $.get(plink, { ajax: true }, function (data) {
                            $(".mainbox").html(data);
                        })
                            }
                        });

                    } else {
                alert("需填入正整數單曲價格");
                    }
                } else {
                alert("需填入歌手名稱");
                }
            } else {
                alert("需填入單曲名稱");
            }
        } else {
                alert("需上傳檔案");
        }
    });

    //撥放器開始
    //這兩個是最終會存回資料庫的試聽開頭與結尾的秒數，浮點數類型
    var demoSetStart;
    var demoSetEnd;
    //編輯單曲所讀取到的資料
    var revfproductname;
    var revfsinger;
    var revfcomposer;
    var revfarranger;
    var revflyricist;
    var revfsiprice;

    //新增
    var m_soid;
    var oplaying = false;
    var dplaying = false;
    var fileName;

    $(".opause").css("display", "none");
    $(".dpause").css("display", "none");
    var music = $(".originalAudio")[0];
    music.volume = 0.6;
    var demoSetMusic = $(".demoSetAudio")[0];
    demoSetMusic.volume = 0.6;

    //讀取檔案，一次只能讀取一個
    $("#upload").on("change", function () {
        music = $(".originalAudio")[0];
        let file = document.getElementById("upload").files[0];
        if (file.type != "audio/mp3") {
            file = null;
        }
        let reader = new FileReader();
        reader.readAsDataURL(file);
        //載入時先進行解析mp3檔案名稱,歌手
        showMetaData(file);
        reader.onload = function (e) {
        music.src = e.target.result;
        demoSetMusic.src = e.target.result;
        }
    });

    //解析mp3檔案名稱,歌手方法
    function showMetaData(data) {
      musicmetadata(data, function (err, result) {
        if (err) throw err;
          console.log(result);
          let title = result.title;
          let artist = result.artist[0];

          //如果檔案內tag找不到資料時,以檔名當參考
          if (title == "") {
              let filename = data.name;
              var filenamearr = new Array();
              var filenamearr = filename.split(".mp3");;
              title = filenamearr[0];
          }
          $("#tP_fProductName").val(title);
          $("#tP_fSinger").val(artist);
          //取得單曲內tag id夾帶的專輯圖片,先不時做
        //if (result.picture.length > 0) {
        //  var picture = result.picture[0];
        //  var url = URL.createObjectURL(new Blob([picture.data], {'type': 'image/' + picture.format}));
        //  var image = document.getElementById('myimg');
        //  image.src = url;
        //}
        //var div = document.getElementById('info');
        //div.innerText = JSON.stringify(result, undefined, 2);
      });

    }

    //讀取音樂時會進行初始化
    $(".originalAudio").on("durationchange", function () {
        music = this;
        let totalSetTime = parseInt(music.duration);
        let demoTotal = demoSetEnd - demoSetStart;
        // console.log(demoTotal);
        //console.log(totalSetTime);
        $(".originalSlider").prop("max", totalSetTime);
        //       $(".demoSlider").prop("max",totalSetTime);
        $(".demoSlider").prop("max", demoSetEnd);//demoTotal-->demoSetEnd 0302
        $(".totalSetTime").text(getTimeText(totalSetTime));
        //         $(".totalDemo").text(getTimeText(totalSetTime));
        $(".totalDemo").text(getTimeText(demoSetEnd));//demoTotal-->demoSetEnd 0302

        //同時初始化滑動條
        //$("#slider-range").slider({
        //    range: true,
        //    min: 0,
        //    max: `${music.duration}`,
        //    step: 0.01,
        //    values: [0, music.duration],
        //    slide: function () {
        //        demoSetStart = $("#slider-range").slider("values", 0)
        //        setTryStart();
        //        demoSetEnd = $("#slider-range").slider("values", 1)
        //        setTryEnd();
        //    }
        //});
        $(this).parent().siblings(".slider").slider({
            range: true,
            min: 0,
            max: `${music.duration}`,
            step: 0.01,
            values: [0, music.duration],
            slide: function () {
                demoSetStart = $(this).slider("values", 0)
                demoSetEnd = $(this).slider("values", 1)
                setTryStart();
                setTryEnd();
            }
        });
        console.log(demoSetStart);
        console.log(demoSetEnd);
        $(".start").val(demoSetStart);
        $(".end").val(demoSetEnd);
        setTryStart();
        setTryEnd();
    });

        //播放器的timer
        $(".originalAudio").on("timeupdate", function () {
            $(".originalSlider").prop("value", music.currentTime);
            let now = parseInt(music.currentTime);
            $(".nowTime").text(getTimeText(now));
        });
        $(".demoSetAudio").on("timeupdate", function () {
            $(".demoSlider").prop("value", demoSetMusic.currentTime);
            let now = parseInt(demoSetMusic.currentTime);
            $(".nowDemo").text(getTimeText(now));
            if (demoSetMusic.currentTime > $(".demoSlider").attr("max")) {
                demoSetMusic.pause();
                dplaying = false;
                $(".dplay").css("display", "inline");
                $(".dpause").css("display", "none");
                demoSetMusic.currentTime = demoSetStart;
            }
            //試聽淡入效果(因為設定上淡入三秒淡出四秒，所以要是試聽時間在七秒內會出現音量bug)
            if (demoSetMusic.currentTime < demoSetStart + 3) {
                demoSetMusic.volume = (demoSetMusic.currentTime - demoSetStart) * 0.2;
            }
            //試聽淡出效果
            else if (demoSetMusic.currentTime + 4 > demoSetEnd) {
                demoSetMusic.volume = (demoSetEnd - demoSetMusic.currentTime) * 0.1;
            }
            else {
                demoSetMusic.volume = 0.6;
            }
        });

        //音樂播放暫停鍵
        $(".vbtn").on("click", function () {
            console.log($(this).prop("class"));
            if ($(this).prop("className") == "vbtn oplay") {
                music.play();
                demoSetMusic.pause();
                oplaying = true;
                dplaying = false;
                $(".oplay").css("display", "none");
                $(".opause").css("display", "inline")
                $(".dplay").css("display", "inline")
                $(".dpause").css("display", "none")
            }
            else if ($(this).prop("class") == "vbtn dplay") {
                demoSetMusic.play();
                music.pause();
                dplaying = true;
                oplaying = false;
                $(".dplay").css("display", "none");
                $(".dpause").css("display", "inline")
                $(".oplay").css("display", "inline");
                $(".opause").css("display", "none")
            }
            else if ($(this).prop("class") == "vbtn opause") {
                music.pause();
                oplaying = false;
                $(".oplay").css("display", "inline");
                $(".opause").css("display", "none")
            }
            else if ($(this).prop("class") == "vbtn dpause") {
                demoSetMusic.pause();
                dplaying = false;
                $(".dplay").css("display", "inline");
                $(".dpause").css("display", "none")
            }
        })

        //選擇進度條後立刻發動值的change(否則會出現延遲，造成改值失敗)
        $(".originalSlider").on('input', function () {
            music.pause();
            $(this).trigger("change");
        })
        $(".demoSlider").on('input', function () {
            demoSetMusic.pause();
            $(this).trigger("change");
        })
        //音樂進度條改變
        $(".originalSlider").on("change", function () {
            music.currentTime = this.value;
        });
        $(".demoSlider").on("change", function () {
            demoSetMusic.currentTime = this.value;
        });
        //拖動進度條直到放開滑鼠才重新開始播放
        $(".originalSlider").on("mouseup", function () {
            if (oplaying)
                music.play();
        });
        $(".demoSlider").on("mouseup", function () {
            if (dplaying)
                demoSetMusic.play();
        });

        //取得音樂時間文字的方法(第二個有給到小數後兩位)
        function getTimeText(num) {
            let m1 = parseInt(num / 600);
            let m2 = parseInt(num / 60 % 10);
            let s1 = parseInt(num % 60 / 10);
            let s2 = parseInt(num % 60 % 10);
            return `${m1}${m2}:${s1}${s2}`;
        }
        function getTimeText2(num) {
            let m1 = parseInt(num / 600);
            let m2 = parseInt(num / 60 % 10);
            let s1 = parseInt(num % 60 / 10);
            let s2 = (num % 60 % 10).toFixed(2);
            return `${m1}${m2}:${s1}${s2}`;
        }

        //設定範圍初始值與結尾值的方法
        function setTryStart() {
            $(".start").val(demoSetStart);
            console.log($("#fPlaye").val());
            $("#tP_fPlayStart").val($(".start").val())
            console.log($("#tP_fPlayEnd").val());
            if (demoSetStart > demoSetMusic.currentTime) {
                demoSetMusic.currentTime = demoSetStart;
                $(".demoSlider").attr("value", `${demoSetStart}`);
            }
            $(".demoSlider").attr("min", `${demoSetStart}`);

        }
        function setTryEnd() {
            $(".end").val(demoSetEnd);
                        $("#tP_fPlayEnd").val($(".end").val())
            $(".totalDemo").text(getTimeText(demoSetEnd));
            if (demoSetEnd < demoSetMusic.currentTime) {
                demoSetMusic.currentTime = demoSetEnd;
                $(".demoSlider").attr("value", `${demoSetEnd}`);
            }
            $(".demoSlider").attr("max", `${demoSetEnd}`);
        }


        //撥放器結束
        //摺疊樣式開始
        $(function () {
            $('.h3fold').click(function () {

                music = $(this).next().find('.originalAudio')[0];
                demoSetMusic = $(this).next().find('.demoSetAudio')[0];
                music.volume = 0.6;
                demoSetMusic.volume = 0.6;
                setTryStart();
                setTryEnd();

                if ($(this).next('.foldAlbum').hasClass('o') == true) {
                    $(this).find('i.fa').removeClass('fa-chevron-down').addClass('fa-chevron-right');
                    $(this).next('.foldAlbum').removeClass('o').slideUp();
                }
                else {
                    $('.h3fold').find('i.fa').removeClass('fa-chevron-down').addClass('fa-chevron-right');
                    $('.h3fold').next('.foldAlbum').removeClass('o').slideUp();
                    music.src = $(this).data('playurl');
                    demoSetMusic.src = $(this).data('playurl');

                    if ($(this).data('start') == "input" && $(this).data('end') == "input") {
                        demoSetStart = 0;
                        demoSetEnd = 30;
                        setTryStart(); //處裡更新單曲時間 之前設定跑掉問題0302
                        setTryEnd(); //處裡更新單曲時間 之前設定跑掉問題0302
                        $(".totalSetTime").text("00:00");
                        $(".totalDemo").text("00:00");
                    } else
                    {
                        demoSetStart = $(this).data('start');
                        demoSetEnd = $(this).data('end');
                        revfproductname = $(this).data('revfproductname');
                        $(".revise_fProductName").val(revfproductname);
                        revfsinger = $(this).data('revfsinger');
                        $(".revise_fSinger").val(revfsinger);
                        revfcomposer = $(this).data('revfcomposer');
                        $(".revise_fComposer").val(revfcomposer);
                        revfsiprice = $(this).data('revfsiprice');
                        $(".revise_fSIPrice").val(revfsiprice);
                        setTryStart(); //處裡更新單曲時間 之前設定跑掉問題0302
                        setTryEnd(); //處裡更新單曲時間 之前設定跑掉問題0302
                    }

                    m_soid = $(this).data('soid');
                    $(this).find('i.fa').removeClass('fa-chevron-right').addClass('fa-chevron-down');
                    $(this).next('.foldAlbum').addClass('o').slideDown();
                }
            });


        });
        //摺疊樣式結束

    //更新試聽資料開始
            $('.updatetime').click(function () {
               // var formData = new FormData($("#form3")[0]);
                var formData = new FormData();
                revfproductname = $(".revise_fProductName").val();
                revfsinger = $(".revise_fSinger").val();
                revfcomposer = $(".revise_fComposer").val();
                revfarranger = $(".revise_fArranger").val();
                revflyricist = $(".revise_fLyricist").val();
                revfsiprice = $(".revise_fSIPrice").val();

                formData.append('revise_fProductName', revfproductname);
                formData.append('revise_fSinger', revfsinger);
                formData.append('revise_fComposer', revfcomposer);
                formData.append('revise_fSIPrice', revfsiprice);
                formData.append('revise_fPlayStart', demoSetStart);
                formData.append('revise_fPlayEnd', demoSetEnd);

                       $.ajax({
                       url: `./updateSongInfoAjax?soid=${m_soid}`,
                       type: "POST",
                       data: formData,
                       cache: false,
                       dataType: 'script',
                       processData: false,
                       contentType: false,
                           success: function (data) {
                               $(".eventNotification").html(data);
                               let plink = "@Url.Action("AlbumInfo","Album",new {amid = Session["albumid"].ToString()})";
                                               $.get(plink, { ajax: true }, function (data) {
                                 $(".mainbox").html(data);
                                               })
                       }
                       });
            })

            //更新試聽時間結束

        //更新專輯資訊
            $('.editAlbumInfo').click(function () {
                        //$("#form1").submit();
                //var $form=$("#form1").get(0);
                //var formData = new FormData($form);
                    var formData = new FormData($("#form1")[0]);
                   $.ajax({
                       url: `./updateAlbumInfoFile/`,
                       type: "POST",
                       data: formData,
                       cache: false,
                       dataType: 'script',
                       processData: false,
                       contentType: false,
                       success: function (data) {
                           $(".eventNotification").html(data);
                           let plink = "@Url.Action("AlbumInfo","Album",new {amid = Session["albumid"].ToString()})";
                           $.get(plink, { ajax: true }, function (data) {
                               $(".mainbox").html(data);
                           });
                   }
                })
            });

        $('.editAlbumInfoClose').click(function () {
                    $.ajax({
                    type: "Post",
                    url: `./updateAlbumInfoClose/`,
                    data: '{}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "script",
                    async: false,
                    success: function (data) {
                           $(".eventNotification").html(data);
                           let plink = "@Url.Action("AlbumInfo","Album",new {amid = Session["albumid"].ToString()})";
                           $.get(plink, { ajax: true }, function (data) {
                               $(".mainbox").html(data);
                           });
                    },
                    failure: function (errMsg) {
                    }
                })
        })

        //更新單曲檔案
            $('.updateSongInfo').click(function () {
                $.get("@Url.Action("_updateSongInterface","Album")?soid="+m_soid, function (data) {
                    $("#modalContent").html(data);
                });
                $("#modal").css("display", "block");
                setTimeout(function () {
                    $("#modal").addClass("fadein");
                    $("#modalContent").addClass("fadein");
                }, 10)
            });

        $(".deletesong").click(function () {
            if (confirm("真的要刪除嗎?")) {
                 @*@Html.ActionLink("刪除", "DelteSong", new { amid = item.fProductID }, new { @class = "btn btn-danger", onclick = "return confirm('確定要刪除嗎?')" })*@
                $.get("@Url.Action("DelteSong","Album")?amid="+$(this).data("songid"), function (data) {
                    $("#eventNotification").html(data);
                    let plink = "@Url.Action("AlbumInfo","Album",new {amid = Session["albumid"].ToString()})";
                    $.get(plink, { ajax: true }, function (data) {
                    $(".mainbox").html(data);
                })
                });
            } else {
            }
        })

</script>
