﻿
@{
    Layout = null;
    //if (Session[CDictionary.SK_ACCOUNT] != null || Session[CDictionary.SK_ACCOUNT].ToString()!="")
    //{
    //    Response.Redirect("~/Album/Index/");
    //}
}

<style>


    /*滑鼠拖曳選擇Kind效果css開始*/
    .containerDrag ul {
        width: 240px;
        padding: 7px;
        min-height: 300px;
        background-color: #292929;
        margin: 10px;
        display: block;
        float: left;
        border-radius: 5px;
        border: 1px solid #bbb;
    }

        .containerDrag ul li {
            display: block;
            float: left;
            width: 80px;
            height: 35px;
            line-height: 35px;
            border-radius: 4px;
            margin: 0;
            padding: 0;
            list-style: none;
            background-color: white;
            margin-bottom: 10px;
            -moz-user-select: none;
            user-select: none;
            text-indent: 10px;
            color: black;
            margin-right: 10px
        }

    .box {
        font-family: "微軟正黑體";
        margin: 0 auto;
        max-width: 800px;
        text-align: center;
    }

    .kindReviseBtn {
        width: 20%;
        padding: 5px;
        margin: auto;
        background-color: #1db954;
        border-radius: 15px;
        cursor: pointer;
        color: white;
        text-align: center;
        transition: 0.4s;
    }

    .loingBtn:hover {
        background-color: #1dd15d;
    }
</style>
<script>
    dragReflash();
</script>
<div class="box">

    @*//防止網站被攻擊的防護，但目前會報錯先註解*@
    @*@Html.AntiForgeryToken();*@
    <h2>類型更改</h2>

    @*使用拖曳填入input的專輯Kind*@
    <div class="form-group" style="min-height:400px">
        <div class="col-md-12">
            <div class="containerDrag">
                <ul id="userKindtaginput"></ul>
                <ul id="adKindULPageload">
                </ul>
            </div>
            <hr />
            @*input除錯用,平常type設成hide*@
            <input class="form-control text-box single-line" id="tA_fKindsinner" type="hidden" value="">
        </div>
    </div>
    <script>
        $(function () {
            drag.init('containerDrag');
        });
    </script>


    <div class="kindReviseBtn">更改</div>

</div>

<script>
    $(".kindReviseBtn").click(function () {
                            let kindtag = new Array();
                  setTimeout(function () {
                        $("#modal").removeClass("fadein");
                        $("#modalContent").removeClass("fadein");
                    }, 10)
                    setTimeout(function () {
                        $("#modal").css("display", "none");
                    }, 500)

            $("#userKindtaginput li").each(function () {
                kindtag.push($(this).text());
        })
        $("#tA_fKindstext").text(kindtag);
        $("#tA_fKinds").val(kindtag);
        drag = null;
    })

    //重新載入drag
    function dragReflash() {
        //可拖動Ul/Li物件初始化
drag = {
class_name: null,
permitDrag: false,
_x: 0,
_y: 0,
_left: 0,
_top: 0,
old_elm: null,
tmp_elm: null,
new_elm: null,
init: function (className) {
drag.class_name = className;
    $('.' + drag.class_name).on('mousedown', 'ul > li', function (event) {
                drag.permitDrag = true;
                drag.old_elm = $(this);
                drag.mousedown(event);
                return false;
    });

    $(document).mousemove(function (event) {
  //  $('.' + drag.class_name).on('mousemove', 'ul > li', function (event) {
                if (!drag.permitDrag) return false;
                drag.mousemove(event);
                return false;
});
    $(document).mouseup(function (event) {
  //  $('.' + drag.class_name).on('mouseup', 'ul > li', function (event) {
                if (!drag.permitDrag) return false;
                drag.permitDrag = false;
                drag.mouseup(event);
                return false;
});
    },
    mousedown: function (event) {


            console.log('我被mousedown了');
            drag.tmp_elm = $(drag.old_elm).clone();

            drag._x = $(drag.old_elm).offset().left;
            drag._y = $(drag.old_elm).offset().top;

            var e = event || window.event;
            drag._left = e.pageX - drag._x;
            drag._top = e.pageY - drag._y;

            $(drag.tmp_elm).css({
                'position': 'absolute',
                'background-color': '#353535',
                'left': drag._x,
                'top': drag._y,
            });

            tmp = $(drag.old_elm).parent().append(drag.tmp_elm);
            drag.tmp_elm = $(tmp).find(drag.tmp_elm);
            $(drag.tmp_elm).css('cursor', 'move');

        },

        mousemove: function (event) {

            console.log('我被mousemove了');

            var e = event || window.event;
            var x = e.pageX - drag._left;
            var y = e.pageY - drag._top;
            var maxL = $(document).width() - $(drag.old_elm).outerWidth();
            var maxT = $(document).height() - $(drag.old_elm).outerHeight();

            x = x < 0 ? 0 : x;
            x = x > maxL ? maxL : x;
            y = y < 0 ? 0 : y;
            y = y > maxT ? maxT : y;

            $(drag.tmp_elm).css({
                'left': x,
                'top': y,
            });

            $.each($('.' + drag.class_name + ' ul'), function (index, value) {

                var box_x = $(value).offset().left;
                var box_y = $(value).offset().top;
                var box_width = $(value).outerWidth();
                var box_height = $(value).outerHeight();

                if (e.pageX > box_x && e.pageX < box_x - 0 + box_width && e.pageY > box_y && e.pageY < box_y - 0 + box_height) {

                    if ($(value).offset().left !== drag.old_elm.parent().offset().left
                        || $(value).offset().top !== drag.old_elm.parent().offset().top) {

                        $(value).css('background-color', '#292929');
                    }
                } else {
                    $(value).css('background-color', '#292929');
                }

            });

        },

        mouseup: function (event) {

            console.log('我被mouseup了');
            $(drag.tmp_elm).remove();

            var e = event || window.event;

            $.each($('.' + drag.class_name + ' ul'), function (index, value) {

                var box_x = $(value).offset().left;
                var box_y = $(value).offset().top;
                var box_width = $(value).outerWidth();
                var box_height = $(value).outerHeight();

                if (e.pageX > box_x && e.pageX < box_x - 0 + box_width && e.pageY > box_y && e.pageY < box_y - 0 + box_height) {

                    if ($(value).offset().left !== drag.old_elm.parent().offset().left
                        || $(value).offset().top !== drag.old_elm.parent().offset().top) {
                        tmp = $(drag.old_elm).clone();
                        var newObj = $(value).append(tmp);
                        $(drag.old_elm).remove();
                        drag.new_elm = $(newObj).find(tmp);
                    }
                }
                $(value).css('background-color', '#353535');
            });

        },

};
    }

    $.getJSON('@Url.Action("SetKinds","Search")', function (datas) {
        let originKinds = $("#tA_fKinds").val();
         $.each(datas, function (name, value) {
             if (originKinds.indexOf(value.KindName) != -1) {
                 $("#userKindtaginput").append(`<li value="${value.KindName}">${value.KindName}</li>`)
             } else {
                 $("#adKindULPageload").append(`<li value="${value.KindName}">${value.KindName}</li>`)
             }

         })
    })

        //滑鼠拖動時取得拖曳內容轉成文字方塊
        $("#userKindtaginput, #adKindULPageload").mouseout(function () {
       // let kindtag = '';
            let kindtag = new Array();
            $("#userKindtaginput li").each(function () {
                kindtag.push($(this).text());
         //   kindtag += ""+$(this).text() + ',';
         //   console.log($(this).text());
        })
        $("#tA_fKindsinner").val(kindtag);
        })

</script>

